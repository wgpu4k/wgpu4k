package darwin

import org.rococoa.ObjCObject
import org.rococoa.cocoa.foundation.NSInteger


/**
 * This file was autogenerated by [JNAerator](http://jnaerator.googlecode.com/),<br></br>
 * a tool written by [Olivier Chafik](http://ochafik.free.fr/) that [uses a few opensource projects.](http://code.google.com/p/jnaerator/wiki/CreditsAndLicense).<br></br>
 * For help, please visit [NativeLibs4Java](http://nativelibs4java.googlecode.com/), [Rococoa](http://rococoa.dev.java.net/), or [JNA](http://jna.dev.java.net/).
 */
abstract class NSPopUpButtonCell : NSButtonCell() {
	/**
	 * If usesItemFromMenu is true, then pull down popup buttons always show the first item in the menu.  That menu item is hidden via [menuItem setHidden:YES]; if you wish to make it visible you can unhide it with setHidden:NO<br></br>
	 * Original signature : `-(void)setPullsDown:(BOOL)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:52*
	 */
	abstract fun setPullsDown(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)pullsDown`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:53*
	 */
	abstract fun pullsDown(): Boolean

	/**
	 * Original signature : `-(void)setAutoenablesItems:(BOOL)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:55*
	 */
	abstract fun setAutoenablesItems(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)autoenablesItems`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:56*
	 */
	abstract fun autoenablesItems(): Boolean
	/**
	 * *native declaration : NSPopUpButtonCell.h:58*<br></br>
	 * Conversion Error : /// Original signature : `-(void)setPreferredEdge:()`<br></br>
	 * - (void)setPreferredEdge:(null)edge; (Argument edge cannot be converted)
	 */
	/**
	 * Original signature : `-(id)preferredEdge`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:59*
	 */
	abstract fun preferredEdge(): NSObject?

	/**
	 * Original signature : `-(void)setUsesItemFromMenu:(BOOL)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:62*
	 */
	abstract fun setUsesItemFromMenu(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)usesItemFromMenu`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:63*
	 */
	abstract fun usesItemFromMenu(): Boolean

	/**
	 * Original signature : `-(void)setAltersStateOfSelectedItem:(BOOL)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:66*
	 */
	abstract fun setAltersStateOfSelectedItem(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)altersStateOfSelectedItem`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:67*
	 */
	abstract fun altersStateOfSelectedItem(): Boolean

	/**
	 * Adding and removing items<br></br>
	 * Original signature : `-(void)addItemWithTitle:(NSString*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:71*
	 */
	abstract fun addItemWithTitle(title: NSString?)

	/**
	 * Original signature : `-(void)addItemsWithTitles:(NSArray*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:72*
	 */
	abstract fun addItemsWithTitles(itemTitles: NSArray?)

	/**
	 * Original signature : `-(void)insertItemWithTitle:(NSString*) atIndex:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:73*
	 */
	abstract fun insertItemWithTitle_atIndex(title: NSString?, index: NSInteger?)

	/**
	 * Original signature : `-(void)removeItemWithTitle:(NSString*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:75*
	 */
	abstract fun removeItemWithTitle(title: NSString?)

	/**
	 * Original signature : `-(void)removeItemAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:76*
	 */
	abstract fun removeItemAtIndex(index: NSInteger?)

	/**
	 * Original signature : `-(void)removeAllItems`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:77*
	 */
	abstract fun removeAllItems()

	/**
	 * Accessing the items<br></br>
	 * Original signature : `-(NSArray*)itemArray`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:81*
	 */
	abstract fun itemArray(): NSArray?

	/**
	 * Original signature : `-(NSInteger)numberOfItems`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:82*
	 */
	abstract fun numberOfItems(): NSInteger?

	/**
	 * Original signature : `-(NSInteger)indexOfItem:(NSMenuItem*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:84*
	 */
	abstract fun indexOfItem(item: NSMenuItem?): NSInteger?

	/**
	 * Original signature : `-(NSInteger)indexOfItemWithTitle:(NSString*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:85*
	 */
	abstract fun indexOfItemWithTitle(title: NSString?): NSInteger?

	/**
	 * Original signature : `-(NSInteger)indexOfItemWithTag:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:86*
	 */
	abstract fun indexOfItemWithTag(tag: NSInteger?): NSInteger?

	/**
	 * Original signature : `-(NSInteger)indexOfItemWithRepresentedObject:(id)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:87*
	 */
	abstract fun indexOfItemWithRepresentedObject(obj: ObjCObject?): NSInteger?

	/**
	 * Original signature : `-(NSInteger)indexOfItemWithTarget:(id) andAction:(SEL)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:88*
	 */
	abstract fun indexOfItemWithTarget_andAction(target: ObjCObject?, actionSelector: org.rococoa.Selector?): NSInteger?

	/**
	 * Original signature : `-(NSMenuItem*)itemAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:90*
	 */
	abstract fun itemAtIndex(index: NSInteger?): NSMenuItem?

	/**
	 * Original signature : `-(NSMenuItem*)itemWithTitle:(NSString*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:91*
	 */
	abstract fun itemWithTitle(title: NSString?): NSMenuItem?

	/**
	 * Original signature : `-(NSMenuItem*)lastItem`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:92*
	 */
	abstract fun lastItem(): NSMenuItem?

	/**
	 * Dealing with selection<br></br>
	 * Original signature : `-(void)selectItem:(NSMenuItem*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:96*
	 */
	abstract fun selectItem(item: NSMenuItem?)

	/**
	 * Original signature : `-(void)selectItemAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:97*
	 */
	abstract fun selectItemAtIndex(index: NSInteger?)

	/**
	 * Original signature : `-(void)selectItemWithTitle:(NSString*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:98*
	 */
	abstract fun selectItemWithTitle(title: NSString?)

	/**
	 * Original signature : `-(BOOL)selectItemWithTag:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:100*
	 */
	abstract fun selectItemWithTag(tag: NSInteger?): Boolean

	/**
	 * Original signature : `-(void)setTitle:(NSString*)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:102*
	 */
	abstract fun setTitle(aString: NSString?)

	/**
	 * Original signature : `-(NSMenuItem*)selectedItem`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:104*
	 */
	abstract fun selectedItem(): NSMenuItem?

	/**
	 * Original signature : `-(NSInteger)indexOfSelectedItem`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:105*
	 */
	abstract fun indexOfSelectedItem(): NSInteger?

	/**
	 * Original signature : `-(void)synchronizeTitleAndSelectedItem`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:106*
	 */
	abstract fun synchronizeTitleAndSelectedItem()

	/**
	 * Title conveniences<br></br>
	 * Original signature : `-(NSString*)itemTitleAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:110*
	 */
	abstract fun itemTitleAtIndex(index: NSInteger?): NSString?

	/**
	 * Original signature : `-(NSArray*)itemTitles`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:111*
	 */
	abstract fun itemTitles(): NSArray?

	/**
	 * Original signature : `-(NSString*)titleOfSelectedItem`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:112*
	 */
	abstract fun titleOfSelectedItem(): NSString?
	/**
	 * *native declaration : NSPopUpButtonCell.h:114*<br></br>
	 * Conversion Error : /// Original signature : `-(void)attachPopUpWithFrame:() inView:(NSView*)`<br></br>
	 * - (void)attachPopUpWithFrame:(null)cellFrame inView:(NSView*)controlView; (Argument cellFrame cannot be converted)
	 */
	/**
	 * Original signature : `-(void)dismissPopUp`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:115*
	 */
	abstract fun dismissPopUp()
	/**
	 * *native declaration : NSPopUpButtonCell.h:116*<br></br>
	 * Conversion Error : /// Original signature : `-(void)performClickWithFrame:() inView:(NSView*)`<br></br>
	 * - (void)performClickWithFrame:(null)frame inView:(NSView*)controlView; (Argument frame cannot be converted)
	 */
	/**
	 * Arrow position for bezel style and borderless popups.<br></br>
	 * Original signature : `-(NSPopUpArrowPosition)arrowPosition`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:119*
	 */
	abstract
		/**
		 * @see AppKitLibrary.NSPopUpArrowPosition
		 */
	fun arrowPosition(): Int

	/**
	 * Original signature : `-(void)setArrowPosition:(NSPopUpArrowPosition)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:120*<br></br>
	 *
	 * @param position @see AppKitLibrary#NSPopUpArrowPosition
	 */
	abstract fun setArrowPosition(position: Int)

	/**
	 * Original signature : `-(void)setObjectValue:(id)`<br></br>
	 * *native declaration : NSPopUpButtonCell.h:124*
	 */
	abstract fun setObjectValue(obj: ObjCObject?)
}
