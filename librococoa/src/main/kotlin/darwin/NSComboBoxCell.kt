package darwin 

import org.rococoa.ObjCClass
import org.rococoa.ObjCObject
import org.rococoa.cocoa.foundation.NSInteger

/**
 * This file was autogenerated by [JNAerator](http://jnaerator.googlecode.com/),<br></br>
 * a tool written by [Olivier Chafik](http://ochafik.free.fr/) that [uses a few opensource projects.](http://code.google.com/p/jnaerator/wiki/CreditsAndLicense).<br></br>
 * For help, please visit [NativeLibs4Java](http://nativelibs4java.googlecode.com/), [Rococoa](http://rococoa.dev.java.net/), or [JNA](http://jna.dev.java.net/).
 *
 */
abstract class NSComboBoxCell : NSTextFieldCell() {
	interface _Class : ObjCClass {
		open fun alloc(): NSComboBoxCell
	}

	@Override
	abstract override fun init(): NSComboBoxCell?

	/**
	 * Original signature : `-(BOOL)hasVerticalScroller`<br></br>
	 * *native declaration : NSComboBoxCell.h:38*
	 */
	abstract fun hasVerticalScroller(): Boolean

	/**
	 * Original signature : `-(void)setHasVerticalScroller:(BOOL)`<br></br>
	 * *native declaration : NSComboBoxCell.h:39*
	 */
	abstract fun setHasVerticalScroller(flag: Boolean)

	/**
	 * Original signature : `-(id)intercellSpacing`<br></br>
	 * *native declaration : NSComboBoxCell.h:40*
	 */
	abstract fun intercellSpacing(): NSObject?
	/**
	 * *native declaration : NSComboBoxCell.h:41*<br></br>
	 * Conversion Error : /// Original signature : `-(void)setIntercellSpacing:()`<br></br>
	 * - (void)setIntercellSpacing:(null)aSize; (Argument aSize cannot be converted)
	 */
	/**
	 * Original signature : `-(CGFloat)itemHeight`<br></br>
	 * *native declaration : NSComboBoxCell.h:42*
	 */
	abstract fun itemHeight(): org.rococoa.cocoa.CGFloat?

	/**
	 * Original signature : `-(void)setItemHeight:(CGFloat)`<br></br>
	 * *native declaration : NSComboBoxCell.h:43*
	 */
	abstract fun setItemHeight(itemHeight: org.rococoa.cocoa.CGFloat?)

	/**
	 * Original signature : `-(NSInteger)numberOfVisibleItems`<br></br>
	 * *native declaration : NSComboBoxCell.h:44*
	 */
	abstract fun numberOfVisibleItems(): NSInteger?

	/**
	 * Original signature : `-(void)setNumberOfVisibleItems:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:45*
	 */
	abstract fun setNumberOfVisibleItems(visibleItems: NSInteger?)

	/**
	 * Original signature : `-(void)setButtonBordered:(BOOL)`<br></br>
	 * *native declaration : NSComboBoxCell.h:48*
	 */
	abstract fun setButtonBordered(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)isButtonBordered`<br></br>
	 * *native declaration : NSComboBoxCell.h:49*
	 */
	abstract fun isButtonBordered(): Boolean

	/**
	 * Original signature : `-(void)reloadData`<br></br>
	 * *native declaration : NSComboBoxCell.h:52*
	 */
	abstract fun reloadData()

	/**
	 * Original signature : `-(void)noteNumberOfItemsChanged`<br></br>
	 * *native declaration : NSComboBoxCell.h:53*
	 */
	abstract fun noteNumberOfItemsChanged()

	/**
	 * Original signature : `-(void)setUsesDataSource:(BOOL)`<br></br>
	 * *native declaration : NSComboBoxCell.h:55*
	 */
	abstract fun setUsesDataSource(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)usesDataSource`<br></br>
	 * *native declaration : NSComboBoxCell.h:56*
	 */
	abstract fun usesDataSource(): Boolean

	/**
	 * Original signature : `-(void)scrollItemAtIndexToTop:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:58*
	 */
	abstract fun scrollItemAtIndexToTop(index: NSInteger?)

	/**
	 * Original signature : `-(void)scrollItemAtIndexToVisible:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:59*
	 */
	abstract fun scrollItemAtIndexToVisible(index: NSInteger?)

	/**
	 * Original signature : `-(void)selectItemAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:61*
	 */
	abstract fun selectItemAtIndex(index: NSInteger?)

	/**
	 * Original signature : `-(void)deselectItemAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:62*
	 */
	abstract fun deselectItemAtIndex(index: NSInteger?)

	/**
	 * Original signature : `-(NSInteger)indexOfSelectedItem`<br></br>
	 * *native declaration : NSComboBoxCell.h:63*
	 */
	abstract fun indexOfSelectedItem(): NSInteger?

	/**
	 * Original signature : `-(NSInteger)numberOfItems`<br></br>
	 * *native declaration : NSComboBoxCell.h:64*
	 */
	abstract fun numberOfItems(): NSInteger?

	/**
	 * Original signature : `-(BOOL)completes`<br></br>
	 * *native declaration : NSComboBoxCell.h:66*
	 */
	abstract fun completes(): Boolean

	/**
	 * Original signature : `-(void)setCompletes:(BOOL)`<br></br>
	 * *native declaration : NSComboBoxCell.h:67*
	 */
	abstract fun setCompletes(completes: Boolean)

	/**
	 * Original signature : `-(NSString*)completedString:(NSString*)`<br></br>
	 * *native declaration : NSComboBoxCell.h:68*
	 */
	abstract fun completedString(string: org.rococoa.cocoa.foundation.NSString?): org.rococoa.cocoa.foundation.NSString?

	/**
	 * These two methods can only be used when usesDataSource is YES<br></br>
	 * Original signature : `-(id<NSComboBoxCellDataSource>)dataSource</NSComboBoxCellDataSource>`<br></br>
	 * *native declaration : NSComboBoxCell.h:71*
	 */
	abstract fun dataSource(): Object?

	/**
	 * Original signature : `-(void)setDataSource:(id<NSComboBoxCellDataSource>)</NSComboBoxCellDataSource>`<br></br>
	 * *native declaration : NSComboBoxCell.h:72*
	 */
	abstract fun setDataSource(aSource: Object?)

	/**
	 * These methods can only be used when usesDataSource is NO<br></br>
	 * Original signature : `-(void)addItemWithObjectValue:(id)`<br></br>
	 * *native declaration : NSComboBoxCell.h:75*
	 */
	abstract fun addItemWithObjectValue(`object`: ObjCObject?)

	/**
	 * Original signature : `-(void)addItemsWithObjectValues:(NSArray*)`<br></br>
	 * *native declaration : NSComboBoxCell.h:76*
	 */
	abstract fun addItemsWithObjectValues(objects: org.rococoa.cocoa.foundation.NSArray?)

	/**
	 * Original signature : `-(void)insertItemWithObjectValue:(id) atIndex:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:77*
	 */
	abstract fun insertItemWithObjectValue_atIndex(`object`: ObjCObject?, index: NSInteger?)

	/**
	 * Original signature : `-(void)removeItemWithObjectValue:(id)`<br></br>
	 * *native declaration : NSComboBoxCell.h:78*
	 */
	abstract fun removeItemWithObjectValue(`object`: ObjCObject?)

	/**
	 * Original signature : `-(void)removeItemAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:79*
	 */
	abstract fun removeItemAtIndex(index: NSInteger?)

	/**
	 * Original signature : `-(void)removeAllItems`<br></br>
	 * *native declaration : NSComboBoxCell.h:80*
	 */
	abstract fun removeAllItems()

	/**
	 * Original signature : `-(void)selectItemWithObjectValue:(id)`<br></br>
	 * *native declaration : NSComboBoxCell.h:81*
	 */
	abstract fun selectItemWithObjectValue(`object`: ObjCObject?)

	/**
	 * Original signature : `-(id)itemObjectValueAtIndex:(NSInteger)`<br></br>
	 * *native declaration : NSComboBoxCell.h:82*
	 */
	abstract fun itemObjectValueAtIndex(index: NSInteger?): NSObject?

	/**
	 * Original signature : `-(id)objectValueOfSelectedItem`<br></br>
	 * *native declaration : NSComboBoxCell.h:83*
	 */
	abstract fun objectValueOfSelectedItem(): NSObject?

	/**
	 * Original signature : `-(NSInteger)indexOfItemWithObjectValue:(id)`<br></br>
	 * *native declaration : NSComboBoxCell.h:84*
	 */
	abstract fun indexOfItemWithObjectValue(`object`: ObjCObject?): NSInteger?

	/**
	 * Original signature : `-(NSArray*)objectValues`<br></br>
	 * *native declaration : NSComboBoxCell.h:85*
	 */
	abstract fun objectValues(): org.rococoa.cocoa.foundation.NSArray? /// <i>native declaration : NSComboBoxCell.h:18</i>

	companion object {
		private val CLASS: _Class = org.rococoa.Rococoa.createClass("NSComboBoxCell", _Class::class.java)

		fun comboBoxCell(): NSComboBoxCell? {
			return CLASS.alloc().init()
		}
	}
}
