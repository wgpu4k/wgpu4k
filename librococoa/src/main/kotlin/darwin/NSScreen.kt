package darwin 

import org.rococoa.ObjCClass
import org.rococoa.cocoa.CGFloat
import org.rococoa.cocoa.foundation.NSRect

/**
 * This file was autogenerated by [JNAerator](http://jnaerator.googlecode.com/),<br></br>
 * a tool written by [Olivier Chafik](http://ochafik.free.fr/) that [uses a few opensource projects.](http://code.google.com/p/jnaerator/wiki/CreditsAndLicense).<br></br>
 * For help, please visit [NativeLibs4Java](http://nativelibs4java.googlecode.com/), [Rococoa](http://rococoa.dev.java.net/), or [JNA](http://jna.dev.java.net/).
 *
 */
abstract class NSScreen : NSObject() {
	interface _Class : ObjCClass {
		/**
		 * Original signature : `+(NSArray*)screens`<br></br>
		 * All screens; first one is "zero" screen<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:235*
		 */
		open fun screens(): NSArray?

		/**
		 * Original signature : `+(NSScreen*)mainScreen`<br></br>
		 * Screen with key window<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:236*
		 */
		open fun mainScreen(): NSScreen?

		/**
		 * Original signature : `+(NSScreen*)deepestScreen`<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:237*
		 */
		open fun deepestScreen(): NSScreen?
	}

	/**
	 * Original signature : `-(NSWindowDepth)depth`<br></br>
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:239*
	 */
	abstract fun depth(): Int

	/**
	 * Original signature : `-(NSRect)frame`<br></br>
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:240*
	 */
	abstract fun frame(): NSRect?

	/**
	 * Original signature : `-(NSRect)visibleFrame`<br></br>
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:241*
	 */
	abstract fun visibleFrame(): NSRect?

	/**
	 * Original signature : `-(NSDictionary*)deviceDescription`<br></br>
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:242*
	 */
	abstract fun deviceDescription(): NSDictionary?

	/**
	 * Returns scale factor applied by default to windows created on this screen<br></br>
	 * Original signature : `-(CGFloat)userSpaceScaleFactor`<br></br>
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:249*
	 */
	abstract fun userSpaceScaleFactor(): CGFloat?

	companion object {
		private val CLASS: _Class = org.rococoa.Rococoa.createClass("NSScreen", _Class::class.java)

		/**
		 * Original signature : `+(NSArray*)screens`<br></br>
		 * All screens; first one is "zero" screen<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:235*
		 */
		fun screens(): NSArray? {
			return CLASS.screens()
		}

		/**
		 * Original signature : `+(NSScreen*)mainScreen`<br></br>
		 * Screen with key window<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:236*
		 */
		fun mainScreen(): NSScreen? {
			return CLASS.mainScreen()
		}

		/**
		 * Original signature : `+(NSScreen*)deepestScreen`<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/NSGraphics.h:237*
		 */
		fun deepestScreen(): NSScreen? {
			return CLASS.deepestScreen()
		}
	}
}
