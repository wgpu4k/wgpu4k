package darwin 

import org.rococoa.ObjCClass

/**
 * This file was autogenerated by [JNAerator](http://jnaerator.googlecode.com/),<br></br>
 * a tool written by [Olivier Chafik](http://ochafik.free.fr/) that [uses a few opensource projects.](http://code.google.com/p/jnaerator/wiki/CreditsAndLicense).<br></br>
 * For help, please visit [NativeLibs4Java](http://nativelibs4java.googlecode.com/), [Rococoa](http://rococoa.dev.java.net/), or [JNA](http://jna.dev.java.net/).
 */
abstract class NSPrintInfo : NSObject() {
	/**
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/AppKitDefines.h*<br></br>
	 * enum values
	 */
	interface NSPrintingOrientation {
		companion object {
			const val NSPortraitOrientation: Int = 0
			const val NSLandscapeOrientation: Int = 1
		}
	}

	/**
	 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/AppKitDefines.h*<br></br>
	 * enum values
	 */
	interface NSPrintingPaginationMode {
		companion object {
			const val NSAutoPagination: Int = 0
			const val NSFitPagination: Int = 1
			const val NSClipPagination: Int = 2
		}
	}

	interface _Class : ObjCClass {
		/**
		 * Set or get the "shared" instance of NSPrintInfo.  The shared print info object is the one that is used automatically by -[NSPageLayout runModal] and +[NSPrintOperation printOperationWithView:].<br></br>
		 * Original signature : `+(void)setSharedPrintInfo:(NSPrintInfo*)`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:66*
		 */
		open fun setSharedPrintInfo(printInfo: NSPrintInfo?)

		/**
		 * Original signature : `+(NSPrintInfo*)sharedPrintInfo`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:67*
		 */
		open fun sharedPrintInfo(): NSPrintInfo?

		/**
		 * Return the default printer, if one has been selected by the user, nil otherwise.<br></br>
		 * Original signature : `+(NSPrinter*)defaultPrinter`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:127*
		 */
		open fun defaultPrinter(): com.sun.jna.Pointer?

		/**
		 * A method that was deprecated in Mac OS 10.2.  +[NSPrintInfo setDefaultPrinter:] does nothing.<br></br>
		 * Original signature : `+(void)setDefaultPrinter:(NSPrinter*)`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:130*
		 */
		open fun setDefaultPrinter(printer: com.sun.jna.Pointer?)

		/**
		 * A method that was deprecated in Mac OS 10.2.  NSPrintInfo's implementation of this method recognizes only a small fixed set of paper names, and does not take the details of any particular printer into account.  You should use -[NSPrinter pageSizeForPaper:] instead.<br></br>
		 * Original signature : `+(id)sizeForPaperName:(NSString*)`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:133*
		 */
		open fun sizeForPaperName(name: String?): NSObject?

		/// <i>native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h</i>
		open fun alloc(): NSPrintInfo
	}

	/**
	 * Given a dictionary that contains attribute entries, initialize.  Attributes that are recognized by the NSPrintInfo class will be silently validated in the context of the printer selected by the attributes dictionary, or the default printer if the attributes dictionary selects no printer.  Attributes that are not recognized by the NSPrintInfo class will be preserved, and returned in the dictionary returned by the -dictionary method, but otherwise ignored.  This is the designated initializer for this class.<br></br>
	 * Original signature : `-(id)initWithDictionary:(NSDictionary*)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:70*
	 */
	abstract fun initWithDictionary(attributes: NSDictionary?): NSPrintInfo?

	/**
	 * Return a dictionary that contains attribute entries.  This dictionary may contain attributes that were not specified in the dictionary originally passed to this object by -initWithDictionary.  Changes to this dictionary will be reflected in the values returned by subsequent invocations of other of this class' methods.<br></br>
	 * Original signature : `-(NSMutableDictionary*)dictionary`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:73*
	 */
	abstract fun dictionary(): com.sun.jna.Pointer?

	/**
	 * Set or get the values of the paper attributes.  Because an NSPrintInfo's paper name, paper size, and orientation attributes must be kept consistent, invocation of any of the setting methods in this group may affect the values returned by subsequent invocations of any of the getting methods in this group.  For example, paper name and paper size must always agree, and the value returned by -paperSize always takes orientation into account.<br></br>
	 * Original signature : `-(void)setPaperName:(NSString*)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:76*
	 */
	abstract fun setPaperName(name: com.sun.jna.Pointer?)
	/**
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:77*<br></br>
	 * Conversion Error : /// Original signature : `-(void)setPaperSize:()`<br></br>
	 * - (void)setPaperSize:(null)size; (Argument size cannot be converted)
	 */
	/**
	 * Original signature : `-(void)setOrientation:(NSPrintingOrientation)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:78*<br></br>
	 *
	 * @param orientation @see AppKitLibrary#NSPrintingOrientation
	 */
	abstract fun setOrientation(orientation: Int)

	/**
	 * Original signature : `-(NSString*)paperName`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:79*
	 */
	abstract fun paperName(): com.sun.jna.Pointer?

	/**
	 * Original signature : `-(id)paperSize`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:80*
	 */
	abstract fun paperSize(): NSObject?

	/**
	 * Original signature : `-(NSPrintingOrientation)orientation`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:81*
	 */
	abstract
		/**
		 * @see AppKitLibrary.NSPrintingOrientation
		 */
	fun orientation(): Int

	/**
	 * Set or get the values of the pagination attributes.<br></br>
	 * Original signature : `-(void)setLeftMargin:(float)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:84*
	 */
	abstract fun setLeftMargin(margin: Float)

	/**
	 * Original signature : `-(void)setRightMargin:(float)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:85*
	 */
	abstract fun setRightMargin(margin: Float)

	/**
	 * Original signature : `-(void)setTopMargin:(float)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:86*
	 */
	abstract fun setTopMargin(margin: Float)

	/**
	 * Original signature : `-(void)setBottomMargin:(float)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:87*
	 */
	abstract fun setBottomMargin(margin: Float)

	/**
	 * Original signature : `-(float)leftMargin`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:88*
	 */
	abstract fun leftMargin(): Float

	/**
	 * Original signature : `-(float)rightMargin`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:89*
	 */
	abstract fun rightMargin(): Float

	/**
	 * Original signature : `-(float)topMargin`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:90*
	 */
	abstract fun topMargin(): Float

	/**
	 * Original signature : `-(float)bottomMargin`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:91*
	 */
	abstract fun bottomMargin(): Float

	/**
	 * Original signature : `-(void)setHorizontallyCentered:(BOOL)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:92*
	 */
	abstract fun setHorizontallyCentered(flag: Boolean)

	/**
	 * Original signature : `-(void)setVerticallyCentered:(BOOL)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:93*
	 */
	abstract fun setVerticallyCentered(flag: Boolean)

	/**
	 * Original signature : `-(BOOL)isHorizontallyCentered`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:94*
	 */
	abstract fun isHorizontallyCentered(): Boolean

	/**
	 * Original signature : `-(BOOL)isVerticallyCentered`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:95*
	 */
	abstract fun isVerticallyCentered(): Boolean

	/**
	 * Original signature : `-(void)setHorizontalPagination:(NSPrintingPaginationMode)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:96*<br></br>
	 *
	 * @param mode @see AppKitLibrary#NSPrintingPaginationMode
	 */
	abstract fun setHorizontalPagination(mode: Int)

	/**
	 * Original signature : `-(void)setVerticalPagination:(NSPrintingPaginationMode)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:97*<br></br>
	 *
	 * @param mode @see AppKitLibrary#NSPrintingPaginationMode
	 */
	abstract fun setVerticalPagination(mode: Int)

	/**
	 * Original signature : `-(NSPrintingPaginationMode)horizontalPagination`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:98*
	 */
	abstract
		/**
		 * @see AppKitLibrary.NSPrintingPaginationMode
		 */
	fun horizontalPagination(): Int

	/**
	 * Original signature : `-(NSPrintingPaginationMode)verticalPagination`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:99*
	 */
	abstract
		/**
		 * @see AppKitLibrary.NSPrintingPaginationMode
		 */
	fun verticalPagination(): Int

	/**
	 * Set or get the value of the job disposition attribute.<br></br>
	 * Original signature : `-(void)setJobDisposition:(NSString*)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:102*
	 */
	abstract fun setJobDisposition(disposition: com.sun.jna.Pointer?)

	/**
	 * Original signature : `-(NSString*)jobDisposition`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:103*
	 */
	abstract fun jobDisposition(): com.sun.jna.Pointer?

	/**
	 * Set or get the printer specified by this object.<br></br>
	 * Original signature : `-(void)setPrinter:(NSPrinter*)`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:106*
	 */
	abstract fun setPrinter(printer: com.sun.jna.Pointer?)

	/**
	 * Original signature : `-(NSPrinter*)printer`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:107*
	 */
	abstract fun printer(): com.sun.jna.Pointer?

	/**
	 * Validate all of the attributes encapsulated by this object.  This method is invoked automatically before the object is used by an NSPrintOperation.  This method may be overridden to perform validation of attributes that are not recognized by the NSPrintInfo class.<br></br>
	 * Original signature : `-(void)setUpPrintOperationDefaultValues`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:110*
	 */
	abstract fun setUpPrintOperationDefaultValues()

	/**
	 * Return the imageable area of a sheet of paper specified by this object, taking into account the current printer, paper size, and orientation settings, but not scaling.  "Imageable area" is the maximum area that can possibly be marked on by the printer hardware, not the area defined by the current margin settings.  The rectangle is in a coordinate space measured by points, with (0, 0) being the lower-left corner of the oriented sheet and (paperWidth, paperHeight) being the upper-right corner of the oriented sheet.  The imageable bounds may extend past the edges of the sheet when, for example, a printer driver specifies it so that borderless printing can be done reliably.<br></br>
	 * Original signature : `-(id)imageablePageBounds`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:115*
	 */
	abstract fun imageablePageBounds(): NSObject?

	/**
	 * Return the human-readable name of the currently selected paper size, suitable for presentation in user interfaces.  This will typically be different from the name returned by -paperName, which is almost never suitable for presentation to to the user.<br></br>
	 * Original signature : `-(NSString*)localizedPaperName`<br></br>
	 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:122*
	 */
	abstract fun localizedPaperName(): com.sun.jna.Pointer?

	companion object {
		private val CLASS: _Class = org.rococoa.Rococoa.createClass("NSPrintInfo", _Class::class.java)

		/**
		 * Set or get the "shared" instance of NSPrintInfo.  The shared print info object is the one that is used automatically by -[NSPageLayout runModal] and +[NSPrintOperation printOperationWithView:].<br></br>
		 * Original signature : `+(void)setSharedPrintInfo:(NSPrintInfo*)`<br></br>
		 * *native declaration : /System/Library/Frameworks/AppKit.framework/Headers/AppKitDefines.h:66*
		 */
		fun setSharedPrintInfo(printInfo: NSPrintInfo?) {
			CLASS.setSharedPrintInfo(printInfo)
		}

		/**
		 * Original signature : `+(NSPrintInfo*)sharedPrintInfo`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:67*
		 */
		fun sharedPrintInfo(): NSPrintInfo? {
			return CLASS.sharedPrintInfo()
		}

		/**
		 * Factory method<br></br>
		 *
		 * @see .initWithDictionary
		 */
		fun createWithDictionary(attributes: NSDictionary?): NSPrintInfo? {
			return CLASS.alloc().initWithDictionary(attributes)
		}

		/**
		 * Return the default printer, if one has been selected by the user, nil otherwise.<br></br>
		 * Original signature : `+(NSPrinter*)defaultPrinter`<br></br>
		 * *native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h:127*
		 */
		fun defaultPrinter(): com.sun.jna.Pointer? {
			return CLASS.defaultPrinter()
		}

		/// <i>native declaration : /System/Library/Frameworks/framework/Headers/AppKitDefines.h</i>
		fun alloc(): NSPrintInfo? {
			return CLASS.alloc()
		}
	}
}
