name: Tests

on:
  push:
    branches: [ main, 'release/**', 'feature/**', 'fix/**'  ]
    paths-ignore:
      - '*.md'
      - '*.yml'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, 'release/**', 'feature/**', 'fix/**'  ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-14, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    env:
      CI: "true"
    steps:
      - name: install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y libglfw3-dev
      - name: set llvm Path On macos
        if: matrix.os == 'macos-14'
        run: echo "LIBCLANG_PATH=/Applications/Xcode_15.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr" >> $GITHUB_ENV
      - name: set llvm Path On windows
        if: matrix.os == 'windows-latest'
        run: echo "LIBCLANG_PATH=\"C:\Program Files\LLVM\"" >> $GITHUB_ENV
      - name: print architecture
        run: uname -m
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22
          cache: 'gradle'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: assemble
        run: ./gradlew assemble --stacktrace
      - name: build
        run: ./gradlew build --stacktrace
      - name: check
        run: ./gradlew check --stacktrace

      - name: Run e2e tests
        if: matrix.os != 'ubuntu-latest'
        run: ./gradlew :wgpu4k-e2e:e2eTest --stacktrace --info

      - name: Run e2e tests
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run ./gradlew :wgpu4k-e2e:e2eTest --stacktrace --info

      - name: Bundle chromium screenshot
        uses: vimtor/action-zip@v1.2
        with:
          files: ./wgpu4k-e2e/js-chromium/
          recursive: false
          dest: js-chromium-${{ runner.os }}-screenshots.zip

      - name: Bundle jvm screenshot
        uses: vimtor/action-zip@v1.2
        with:
          files: ./wgpu4k-e2e/jvm/
          recursive: false
          dest: jvm-${{ runner.os }}-screenshots.zip

      - name: Upload the build reports
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: |
            jvm-${{ runner.os }}-screenshots.zip
            js-chromium-${{ runner.os }}-screenshots.zip